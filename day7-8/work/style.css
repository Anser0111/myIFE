header {/*底板*/
    background-color: rgb(58, 58, 58);
    color: white;
    width: 100%;
    line-height: 3;/*行高为三倍字高*/
}

.middleblock {/*中间区域*/
    width: 960px;
    display: flex;/*设置为弹性盒子，保证盒子中的两个元素在一行*/
    /*background-color: red;/*辅助背景色*/
    margin: 0 auto;/*盒子在父元素中居中*/
    justify-content: space-between;/*（翻译：证明内容）
    该属性定义了浏览器之间，
    如何分配顺着弹性容器主轴的元素之间及其周围的空间。；
    值：在每行上均匀分配弹性元素，
    相邻元素间距离相同。
    每行第一个元素与行首对齐，每行最后一个元素与行尾对齐。*/
}

.link-list li {/*右上角横向排列*/
    float: left;/*上面用过证明内容将该元素放在右边了
    所以这里用左浮动，让元素从左向右排列*/
    margin-right: 10px;
    
}

.link-list a {/*右上角内容*/
    color: white;/*a链接默认蓝色，要改成白色*/
}

ul {/*改变表格规则*/
    list-style-type: none;/*不显示表项标记*/ 
}

.banner {/*底板*/
    position: relative;/*为了ul中设置绝对位置时方便*/
    width: 100%;
    height: 250px;
    background-color: #28BD32;
}

.banner ul {/*按钮*/
    position: absolute;
    right: 200px;
    bottom: 10px;
    text-align: center;/*控制文字对齐方式，文字属性一般可以继承*/
    height: 40px;
    display: inline-flex;/*行为类似于一个内联元素，
    并根据flexbox模型布局其内容。*/
    align-items: flex-end;/*元素向侧轴终点对齐*/
}

.banner li{/*按钮边框和底色*/
    line-height: 13px;
    margin: 2px;/*用外边框控制元素间距*/
    height: 25px;
    width: 25px;
    box-sizing: border-box;
    background-color: rgba(255, 255, 255, .5);
    padding: 5px;
    font-size: 13px;
    border: 1px solid black;
}

.banner .active {/*特别按钮*/
    padding-top: 20px;/*元素到上边框的距离*/
    height: 40px;
    background-color: rgba(255, 255, 255, .8);
}

nav {/*导航栏容器*/
    margin-top: 40px;
    width: 100%;
    border-bottom: 1px solid #cccccc;/*下侧边框*/
}

nav .container {/*导航栏*/
    margin: 0 auto;
    width: 960px;/*宽度*/
    position: relative;
    z-index: 1;
    display: flex;
    justify-items: center;/*属性为所有盒中的项目
    定义了默认的 justify-self ， 
    可以使这些项目以默认方式沿适当轴线对齐到每个盒子。*/
}

nav .tab {/*每个导航点*/
    /*好像没用/*margin: 0;
    font-size: 15px;
    box-sizing: border-box;
    display: inline-block;*/
    padding: 15px 20px;
    border: 1px solid #cccccc;
    border-radius: 10px 10px 0 0;
    background-color: #e9efee;
    margin-bottom: -1px;
}

nav .active {
    background-color: white;
    border-bottom-color: white;
}

main {/*页面栏*/
    margin: 0 auto;
    width: 960px;
}

main ul {/*小页面集合*/
    margin-top: 10px;
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;/*如何分配顺着弹性容器主轴
    的元素之间及其周围的空间。在每行上均匀分配弹性元素。
    相邻元素间距离相同。
    每行第一个元素与行首对齐，每行最后一个元素与行尾对齐。
    logo中用过。*/
    /* align-content: space-around; */
}

main li {/*每个小页面的样式*/
    box-sizing: border-box;
    padding: 80px;
    border: 1px solid #ccc;
    flex: 0 0 25%;/* 规定了弹性元素如何伸长或缩短以适应flex容器中的可用空间。
    这是一个简写属性，用来设置 flex-grow, flex-shrink 与 flex-basis。*/
    margin-bottom: 10px;
}

main li:nth-child(1),
main li:nth-child(2),
main li:nth-child(3) {
    flex-basis: 32.5%;
}

main li:nth-of-type(4),
main li:nth-of-type(5),
main li:nth-of-type(6),
main li:nth-of-type(7) {
    flex-basis: 24.8%;/*我也不知道为什么，
    当我用chrome时，4567会换行，
    在vscode里就正常，所以我把24%改成了24.8%*/
}

main li:nth-of-type(8),
main li:nth-of-type(9),
main li:nth-of-type(10) {
    flex-basis: 32.5%;
}

footer {
    margin-top: 10px;
    color: white;
    background-color: #333;
    height: 100px;
}

footer .container {
    width: 960px;
    margin: 0 auto;
    text-align: center;/*文字排列*/
}